'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Acomponent = function (_Component) {
  _inherits(Acomponent, _Component);

  function Acomponent(props) {
    _classCallCheck(this, Acomponent);

    var _this = _possibleConstructorReturn(this, (Acomponent.__proto__ || Object.getPrototypeOf(Acomponent)).call(this, props));

    _this.state = {
      view: null
    };
    return _this;
  }

  _createClass(Acomponent, [{
    key: 'viewLoad',
    value: function viewLoad() {
      var _this2 = this;

      var name = this.props.name || 'default';
      this.props.from.then(function (m) {
        _this2.setState({
          view: m[name]
        });
      }).catch(function (reason) {
        if (/Cannot find module/.test(reason)) {
          _this2.props.notFound && _this2.props.notFound.then && _this2.props.notFound.then(function (m) {
            _this2.setState({
              view: m.default
            });
          });
        } else {
          _this2.props.onError && _this2.props.onError.then && _this2.props.onError.then(function (m) {
            _this2.setState({
              view: m.default
            });
          });
          console.error(reason);
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.viewLoad();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this3 = this;

      if (this.props.from && this.props.from !== nextProps.from) {
        this.setState({
          view: null
        }, function () {
          _this3.viewLoad();
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.state.view) {
        return _react2.default.createElement(this.state.view);
      }
      return null;
    }
  }]);

  return Acomponent;
}(_react.Component);

exports.default = Acomponent;